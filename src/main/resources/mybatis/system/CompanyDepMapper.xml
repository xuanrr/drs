<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.companydept.mapper.CompanyDepMapper">
    
    <resultMap type="CompanyDep" id="CompanyDepResult">
        <result property="name"    column="name"    />
        <result property="code"    column="code"    />
        <result property="createTime"    column="create_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
    </resultMap>

    <sql id="selectCompanyDepVo">
        select name, code, create_time, create_by, update_time, update_by from m_company_dep
    </sql>

    <select id="selectCompanyDepList" parameterType="CompanyDep" resultMap="CompanyDepResult">
        <include refid="selectCompanyDepVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="code != null  and code != ''"> and code = #{code}</if>
            <if test="createTime != null "> and create_time = #{createTime}</if>
            <if test="createBy != null  and createBy != ''"> and create_by = #{createBy}</if>
            <if test="updateTime != null "> and update_time = #{updateTime}</if>
            <if test="updateBy != null  and updateBy != ''"> and update_by = #{updateBy}</if>
        </where>
    </select>
    
    <select id="selectCompanyDepByName" parameterType="String" resultMap="CompanyDepResult">
        <include refid="selectCompanyDepVo"/>
        where name = #{name}
    </select>
        
    <insert id="insertCompanyDep" parameterType="CompanyDep">
        insert into m_company_dep
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="code != null">code,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="code != null">#{code},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
         </trim>
    </insert>

    <update id="updateCompanyDep" parameterType="CompanyDep">
        update m_company_dep
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null">code = #{code},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </trim>
        where name = #{name}
    </update>

    <delete id="deleteCompanyDepByName" parameterType="String">
        delete from m_company_dep where name = #{name}
    </delete>

    <delete id="deleteCompanyDepByNames" parameterType="String">
        delete from m_company_dep where name in 
        <foreach item="name" collection="array" open="(" separator="," close=")">
            #{name}
        </foreach>
    </delete>

</mapper>